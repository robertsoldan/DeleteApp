/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deleteapp;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

/**
 *
 * @author robert
 */
public class DeleteAppGUI extends javax.swing.JFrame {

    /**
     * Creates new form DeleteAppGUI
     */
    public DeleteAppGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idTf = new javax.swing.JTextField();
        fNameTf = new javax.swing.JTextField();
        lNameTf = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        idTf.setText("ID");

        fNameTf.setText("First Name");

        lNameTf.setText("Last Name");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(317, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveBtn)
                        .addGap(42, 42, 42)
                        .addComponent(deleteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(viewBtn)
                        .addGap(172, 172, 172))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn)
                    .addComponent(viewBtn))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        
        // When pressing the save button, initiate an arraylist
        // Then try to grab the information in the filel and put it in the arraylist
        ArrayList<Delete> people = new ArrayList<>();

        File inFile;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            inFile = new File("people.dat");
            fStream = new FileInputStream(inFile);
            oStream = new ObjectInputStream(fStream);

            people = (ArrayList<Delete>) oStream.readObject();
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        } catch (ClassNotFoundException c) {
            System.out.println(c);
        }

        // Instantiate the object and place all the text field information in the objec
        Delete d = new Delete();
        d.setId(idTf.getText());
        d.setfName(fNameTf.getText());
        d.setlName(lNameTf.getText());

        // Add the object to the arraylist
        people.add(d);
        
        // Once the arraylist has the new object, write the arraylist to the file
        File outFile;
        FileOutputStream fOutStream;
        ObjectOutputStream outStream;
        try {
            outFile = new File("people.dat");
            fOutStream = new FileOutputStream(outFile);
            outStream = new ObjectOutputStream(fOutStream);

            outStream.writeObject(people);

            outStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        // To delete, first you have to grab the info from the file into an arraylist called "people"
        ArrayList<Delete> people = new ArrayList<>();

        File inFile;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            inFile = new File("people.dat");
            fStream = new FileInputStream(inFile);
            oStream = new ObjectInputStream(fStream);

            people = (ArrayList<Delete>) oStream.readObject();
            oStream.close();
            
            // Once you have the arraylist, you want to loop through it to identify the object you want to delete
            // I'm using a regular for loop as opposed to the for loop used to iterate through an array list because
            // the arraylist.remove() method doesn't play nice with the arraylist specific for loop.
            // Will loop using arraylist.size() method as the top of the counter
            // To access a specific object inside the array I'm using arraylist.get(i) method. This will target the nth 
            // item of the arraylist, where n corresponds to i, the point you are in the current loop
            for (int i = 0; i < people.size(); i++) {
                // Comparing the id text field in the app to the getId() method of the class to identify the exact object
                // which I want to remove
                if (idTf.getText().equals(people.get(i).getId())) {
                    // Remove method for the arraylist, where i is the index of the object, taken from the for loop iteration
                    people.remove(i);
                }
            }
        } catch (IOException e) {
            System.out.println(e);
        } catch (ClassNotFoundException c) {
            System.out.println(c);
        }
        
        // After removing, the arraylist has to be written back to the file, same way as it is done in the save button
        File outFile;
        FileOutputStream fOutStream;
        ObjectOutputStream outStream;
        try {
            outFile = new File("people.dat");
            fOutStream = new FileOutputStream(outFile);
            outStream = new ObjectOutputStream(fOutStream);

            outStream.writeObject(people);

            outStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed

        // To view, we just have to grab the arraylist from the file and place it in an arraylist called "people"
        ArrayList<Delete> people = new ArrayList<>();

        File inFile;
        FileInputStream fStream;
        ObjectInputStream oStream;

        try {
            inFile = new File("people.dat");
            fStream = new FileInputStream(inFile);
            oStream = new ObjectInputStream(fStream);
            
            people = (ArrayList<Delete>) oStream.readObject();
            oStream.close();
            
            // Loop through the arraylist and display all the information in the console
            for (Delete p : people) {
                System.out.println(p.getId());
                System.out.println(p.getfName());
                System.out.println(p.getlName());
            }

        } catch (IOException e) {
            System.out.println(e);
        } catch (ClassNotFoundException c) {
            System.out.println(c);
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteAppGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fNameTf;
    private javax.swing.JTextField idTf;
    private javax.swing.JTextField lNameTf;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
